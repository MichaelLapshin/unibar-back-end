openapi: 3.0.0
info:
  description: API definition for interacting with the back-end system.
  title: UniBar API
  version: 1.0.0

servers:
- description: Local test server.
  url: http://localhost
- description: Developement server.
  url: http://dev.unibar.xyz
- description: Production server.
  url: http://prod.unibar.xyz

paths:
  /admin/messages/list:
    description: Lists all messages.
    get:
      operationId: admin_messages_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Message'
                type: array
          description: Succesfully fetched all messages.
        "400":
          description: Failed to fetch all messages.
      security:
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /admin/orders/list:
    description: Lists all orders.
    get:
      operationId: admin_orders_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Succesfully fetched all orders.
        "400":
          description: Failed to fetch all orders.
      security:
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /admin/reports/list:
    description: Lists all user reports.
    get:
      operationId: admin_reports_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Succesfully fetched all reports.
        "400":
          description: Failed to fetch all orders.
      security:
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /admin/user/{user_id}:
    description: Lists specific user information (password & access token redacted).
    get:
      operationId: admin_user_user_id_get
      parameters:
      - description: User of which to fetch information about.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successfully fetched user information.
      security:
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /admin/users/list:
    description: Lists all users.
    get:
      operationId: admin_users_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Succesfully fetched all users.
        "400":
          description: Failed to fetch all users.
      security:
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /deployment:
    description: States what type of deployment type this server is.
    get:
      operationId: deployment_get
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Type of deployment (e.g. development, production, testing)
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /message:
    description: Send a message to UniBar.
    post:
      operationId: message_post
      parameters:
      - description: User that wants to send a message.
        explode: false
        in: header
        name: user_id
        required: false
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: Email of the person sending the message.
        explode: false
        in: header
        name: email
        required: false
        schema:
          $ref: '#/components/schemas/Email'
        style: simple
      - description: Message to send to UniBar.
        explode: false
        in: header
        name: message
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successfully sent a message to UniBar.
        "400":
          description: Failed to send a message to UniBar.
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /orders/available:
    description: Lists all orders currently available to fulfill.
    get:
      operationId: orders_available_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Successfully fetched orders available to fulfill.
        "400":
          description: Failed to fetch orders available to fulfill.
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /orders/{order_id}:
    description: Fetch a specific order.
    get:
      operationId: orders_order_id_get
      parameters:
      - description: Identification of the order.
        explode: false
        in: path
        name: order_id
        required: true
        schema:
          $ref: '#/components/schemas/OrderID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Successfully fetched order.
        "400":
          description: Failed to fetch orders.
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /ping:
    description: Pings the server.
    get:
      operationId: ping_get
      responses:
        "200":
          description: Successful ping from the server.
          content:
            text/plain:
              schema:
                type: string
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /user/{user_id}/info:
    description: Get public information about the user.
    get:
      operationId: user_user_id_info_get
      parameters:
      - description: Identifying the user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successfully fetched user's public information.
        "400":
          description: Failed to fetch user's public information.
      security:
      - UserToken: []
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /user/{user_id}/order/complete:
    description: Completes the order and performs necessary delivery-token transfer
      from food receiver to deliverer.
    put:
      operationId: user_user_id_order_complete_put
      parameters:
      - description: User whose order is complete and is giving a delivery-token to
          the deliverer.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: Order that is complete and for which a delivery-token must be
          transfered.
        explode: false
        in: header
        name: order_id
        required: true
        schema:
          $ref: '#/components/schemas/OrderID'
        style: simple
      responses:
        "200":
          description: Successfully completed the order and transfered the delivery-token
            from food receiver to the deliverer.
        "400":
          description: Failed to complete the order and transfer the delivery-token
            from the food receiver to the deliverer.
      security:
      - UserToken: []
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /user/{user_id}/order/deliver:
    description: Indicate which order the user intends to fulfill.
    put:
      operationId: user_user_id_order_deliver_put
      parameters:
      - description: User to fulfil the order.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: Order to deliver.
        explode: false
        in: header
        name: order_id
        required: true
        schema:
          $ref: '#/components/schemas/OrderID'
        style: simple
      responses:
        "200":
          description: Succesfully indicated that user intends to fulfill the order.
        "400":
          description: Could not fulfil the order.
        "409":
          description: Order is currently being fulfilled by another user.
      security:
      - UserToken: []
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /user/{user_id}/order/report:
    description: Reports another user in the context of the order.
    post:
      operationId: user_user_id_order_report_post
      parameters:
      - description: User that is reporting.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: User that is reported.
        explode: false
        in: header
        name: reported_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: Order in which the report happened.
        explode: false
        in: header
        name: order_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: Report message from the user reporting.
        explode: false
        in: header
        name: message
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          description: Successfully reported the user.
        "400":
          description: Failed to report the user.
      security:
      - UserToken: []
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /user/{user_id}/order/request:
    description: Create a new delivery request.
    post:
      operationId: user_user_id_order_request_post
      parameters:
      - description: Identifying the user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: Delivery request order of the user.
        explode: false
        in: header
        name: order
        required: true
        schema:
          $ref: '#/components/schemas/Order'
        style: simple
      responses:
        "200":
          description: Successfully created a delivery request.
        "400":
          description: Failed to create a delivery request.
      security:
      - UserToken: []
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /user/{user_id}/orders/delivering:
    description: Fetch the user's orders that they are claiming to be delivering.
    get:
      operationId: user_user_id_orders_delivering_get
      parameters:
      - description: Identifying the user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Succesfully fetched user's claimed orders to be delivering.
        "400":
          description: Failed to fetch user's claimed orders to be delivering.
      security:
      - UserToken: []
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /user/{user_id}/orders/requesting:
    description: Fetch the user's order that they are requesting.
    get:
      operationId: user_user_id_orders_requesting_get
      parameters:
      - description: Identifying the user.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Succesfully fetched user's active orders.
        "400":
          description: Failed to fetch user's active delivery requests.
      security:
      - UserToken: []
      - AdminToken: []
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /user/{user_id}/update:
    description: Update user information.
    parameters:
      - name: user_id
        description: Identifying the user.
        explode: false
        required: true
        in: path
        schema:
          $ref: "#/components/schemas/UserID"
        style: simple
      # Email should not be changed
      - name: name
        description: New name of the user.
        explode: false
        required: false
        in: header
        schema:
          $ref: "#/components/schemas/Name"
        style: simple
      - name: password
        description: New password of the user.
        explode: false
        required: false
        in: header
        schema:
          $ref: "#/components/schemas/Password"
        style: simple
      - name: phone_number
        description: New phone number of the user.
        explode: false
        required: false
        in: header
        schema:
          $ref: "#/components/schemas/PhoneNumber"
        style: simple
      - name: etransfer_email
        description: New e-transfer email of the user.
        explode: false
        required: false
        in: header
        schema:
          $ref: "#/components/schemas/PhoneNumber"
        style: simple
    put:
      operationId: user_update_put
      security:
        - UserToken: []
        - AdminToken: []
      responses:
        "200":
          description: Successfully updated user information.
        "400":
          description: Failed to update user information.
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /users/login:
    description: Logging in a user.
    get:
      operationId: users_login_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserID'
          description: Successfully logged in.
        "400":
          description: Failed to log in user.
      security:
      - UserAuth: []
      summary: Log in a user.
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /users/register:
    description: Registering a user.
    post:
      operationId: users_register_post
      parameters:
      - description: Email of the user to create.
        explode: false
        in: header
        name: email
        required: true
        schema:
          $ref: '#/components/schemas/Email'
        style: simple
      - description: Password used for user to sign-in with.
        explode: false
        in: header
        name: password
        required: true
        schema:
          $ref: '#/components/schemas/Password'
        style: simple
      - description: Name of the new user.
        explode: false
        in: header
        name: name
        required: true
        schema:
          $ref: '#/components/schemas/Name'
        style: simple
      - description: Phone number of the new user.
        explode: false
        in: header
        name: phone_number
        required: true
        schema:
          $ref: '#/components/schemas/PhoneNumber'
        style: simple
      responses:
        "200":
          description: Successfully registered a new user.
        "400":
          description: Failed to register a new user.
        "403":
          description: User already exists.
      summary: Create a new user.
      x-openapi-router-controller: openapi_server.controllers.default_controller

components:
  schemas:
    UserID:
      description: Identification of a user.
      format: uuid
      type: string
    Name:
      description: User's display name.
      type: string
    Email:
      description: Email format.
      format: email
      type: string
    PhoneNumber:
      description: Phone number format.
      pattern: ^\d{10}$
      type: string
    Password:
      description: Password format.
      format: password
      type: string
    DeliveryTokens:
      description: Delivery token count.
      format: int32
      type: integer
    User:
      description: Public-safe user definition.
      properties:
        user_id:
          description: Identification of a user.
          format: uuid
          type: string
        name:
          description: User's display name.
          type: string
        email:
          description: Email format.
          format: email
          type: string
        phone_number:
          description: Phone number format.
          pattern: ^\d{10}$
          type: string
        delivery_tokens:
          description: Delivery token count.
          format: int32
          type: integer
        etransfer_email:
          description: Email format.
          format: email
          type: string
      type: object
    OrderID:
      description: Identification of the order.
      format: uuid
      type: string
    Order:
      description: Content of the order.
      properties:
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
        orderer_id:
          description: Identification of a user.
          format: uuid
          type: string
        deliverer_id:
          description: Identification of a user.
          format: uuid
          type: string
        creation_time:
          format: time
          type: string
        deadline_time:
          format: time
          type: string
        claimed_time:
          format: time
          type: string
        delivered_time:
          format: time
          type: string
        order:
          type: string
        source:
          type: string
        destination:
          type: string
        payment_method:
          enum:
          - cash
          - etransfer
          type: string
        status:
          enum:
          - available
          - claimed
          - delivered
          - cancelled
          type: string
      type: object
    Message:
      description: A user message to UniBar.
      properties:
        message_id:
          format: uuid
          type: string
        user_id:
          description: Identification of a user.
          format: uuid
          type: string
        email:
          description: Email format.
          format: email
          type: string
        message:
          type: string
        time:
          format: time
          type: string
      type: object
    Report:
      description: User report.
      properties:
        report_id:
          format: uuid
          type: string
        reporter_user_id:
          description: Identification of a user.
          format: uuid
          type: string
        reported_user_id:
          description: Identification of a user.
          format: uuid
          type: string
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
        time:
          format: time
          type: string
        message:
          type: string
        conclusion:
          type: string
      type: object
  securitySchemes:
    UserAuth:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller_.info_from_UserAuth
    UserToken:
      in: cookie
      name: user_token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller_.info_from_UserToken
    AdminToken:
      in: header
      name: admin_token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller_.info_from_AdminToken
