openapi: 3.0.0
info:
  description: API definition for interacting with the back-end system.
  title: UniBar API
  version: 1.0.0
servers:
- description: Local test server.
  url: http://localhost
- description: Developement server.
  url: http://dev.unibar.xyz
- description: Production server.
  url: http://prod.unibar.xyz
paths:
  /admin/login:
    post:
      operationId: admin_login_post
      requestBody:
        $ref: '#/components/requestBodies/body_admin_login'
        content:
          application/json:
            schema:
              properties:
                admin_token:
                  format: password
                  type: string
              required:
              - admin_token
              type: object
        description: Admin login API token.
      responses:
        "200":
          description: Successfully logged in the admin.
        "400":
          description: Failed to log in the admin.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Logs in the admin. Sets token in cookies.
  /admin/messages/list:
    get:
      operationId: admin_messages_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Message'
                type: array
          description: Succesfully fetched all messages.
        "400":
          description: Failed to fetch all messages.
      security:
      - AdminAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Lists all messages.
  /admin/orders/list:
    get:
      operationId: admin_orders_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Succesfully fetched all orders.
        "400":
          description: Failed to fetch all orders.
      security:
      - AdminAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Lists all orders.
  /admin/reports/list:
    get:
      operationId: admin_reports_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Report'
                type: array
          description: Succesfully fetched all reports.
        "400":
          description: Failed to fetch all orders.
      security:
      - AdminAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Lists all user reports.
  /admin/users/list:
    get:
      operationId: admin_users_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Succesfully fetched all users.
        "400":
          description: Failed to fetch all users.
      security:
      - AdminAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Lists all users.
  /deployment:
    get:
      operationId: deployment_get
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Type of deployment (e.g. development, production, testing)
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: States what type of deployment type this server is.
  /message:
    post:
      operationId: message_post
      requestBody:
        $ref: '#/components/requestBodies/body_message'
        content:
          application/json:
            schema:
              properties:
                user_id:
                  description: Identification of a user.
                  format: uuid
                  type: string
                email:
                  description: Email format.
                  format: email
                  type: string
                name:
                  type: string
                message:
                  type: string
              required:
              - message
              - name
              type: object
        description: Send an arbitrary message to UniBar with name and message being
          optional. Email or user ID can be specified to help get back in contact
          with the message sender.
        required: true
      responses:
        "200":
          description: Successfully sent a message to UniBar.
        "400":
          description: Failed to send a message to UniBar.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Send a message to UniBar.
  /order/complete:
    put:
      operationId: order_complete_put
      requestBody:
        $ref: '#/components/requestBodies/body_order_complete'
        content:
          application/json:
            schema:
              properties:
                order_id:
                  description: Identification of the order.
                  format: uuid
                  type: string
              required:
              - order_id
              type: object
        description: The ID of the order being marked as complete.
        required: true
      responses:
        "200":
          description: Successfully completed the order and transfered the delivery-token
            from food receiver to the deliverer.
        "400":
          description: Failed to complete the order and transfer the delivery-token
            from the food receiver to the deliverer.
      security:
      - UserAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Completes the order and performs necessary delivery-token transfer from
      food receiver to deliverer.
  /order/claim:
    put:
      operationId: order_claim_put
      requestBody:
        $ref: '#/components/requestBodies/body_order_claim'
        content:
          application/json:
            schema:
              properties:
                order_id:
                  description: Identification of the order.
                  format: uuid
                  type: string
              required:
              - order_id
              type: object
        description: Delivery request order which the user is requesting to deliver.
        required: true
      responses:
        "200":
          description: Succesfully indicated that user intends to fulfill the order.
        "400":
          description: Could not fulfil the order.
        "403":
          description: Order is currently being fulfilled by another user.
      security:
      - UserAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Indicate which order the user intends to fulfill.
  /order/cancel:
    put:
      operationId: order_cancel_put
      requestBody:
        $ref: '#/components/requestBodies/body_order_cancel'
        content:
          application/json:
            schema:
              properties:
                order_id:
                  description: Identification of the order to cancel.
                  format: uuid
                  type: string
              required:
              - order_id
              type: object
        description: User's own available order which they wish to cancel.
        required: true
      responses:
        "200":
          description: Succesfully cancelled one's available order.
        "400":
          description: Failed to cancel one's available order.
      security:
      - UserAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Cancels a user's own AVAILABLE delivery request. Claimed requests cannot be cancelled.
  /order/report:
    post:
      operationId: order_report_post
      requestBody:
        $ref: '#/components/requestBodies/body_order_report'
        content:
          application/json:
            schema:
              properties:
                order_id:
                  description: Identification of the order.
                  format: uuid
                  type: string
                reported_id:
                  description: Identification of a user.
                  format: uuid
                  type: string
                message:
                  type: string
              required:
              - message
              - order_id
              - reported_id
              type: object
        description: Details about the order and user involved in the report. Includes
          a message.
        required: true
      responses:
        "200":
          description: Successfully reported the user.
        "400":
          description: Failed to report the user.
      security:
      - UserAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Reports another user in the context of the order.
  /order/create:
    post:
      operationId: order_create_post
      requestBody:
        $ref: '#/components/requestBodies/body_order_request'
        content:
          application/json:
            schema:
              type: object
              required:
              - deadline_time
              - order
              - source
              - destination
              - payment_method
              properties:
                deadline_time:
                  type: string
                  format: date-time
                order:
                  type: string
                source:
                  type: string
                destination:
                  type: string
                payment_method:
                  $ref: "#/components/schemas/PaymentMethod"
        description: Delivery request order which the user wishes to create.
        required: true
      responses:
        "200":
          description: Successfully created a delivery request.
        "400":
          description: Failed to create a delivery request.
        "406":
          description: Not enough delivery tokens.
      security:
      - UserAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Create a new delivery request.
  /order/unclaim:
    put:
      operationId: order_unclaim_put
      requestBody:
        $ref: '#/components/requestBodies/body_order_unclaim'
        content:
          application/json:
            schema:
              properties:
                order_id:
                  description: Identification of the order.
                  format: uuid
                  type: string
              required:
              - order_id
              type: object
        description: Delivery request order which the user is no longer claiming.
        required: true
      responses:
        "200":
          description: Succesfully indicated that user no longer intends to fulfill
            the order.
        "400":
          description: Could not unclaim the order.
        "403":
          description: User is not currently claiming this order.
      security:
      - UserAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Indicate which order the user no longer intends to fulfill.
  /order/{order_id}:
    get:
      operationId: order_order_id_get
      parameters:
      - description: The ID of the order which the client wants to see its info.
        explode: false
        in: path
        name: order_id
        required: true
        schema:
          $ref: '#/components/schemas/OrderID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Successfully fetched order.
        "400":
          description: Failed to fetch orders.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Fetch a specific order.
  /orders/available:
    get:
      operationId: orders_available_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Successfully fetched orders available to fulfill.
        "400":
          description: Failed to fetch orders available to fulfill.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Lists all orders currently available to fulfill.
  /ping:
    get:
      operationId: ping_get
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Successful ping from the server.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Pings the server.
  /shutdown:
    summary: Shut down the server.
    get:
      operationId: shutdown_get
      security:
      - AdminAuth: []
      responses:
        "200":
          description: Successfully shut down the server.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /user/id:
    summary: Get the ID of the currently logged in user.
    get:  
      operationId: user_id_get
      security:
      - UserAuth: []
      responses:
        "200":
          description: Successfully fetched the logged-in user's id.
        "400":
          description: Failed to fetch the logged-in user's id.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /user/{user_id}:
    get:
      operationId: user_user_id_get
      parameters:
      - description: User ID of the user to identify who's info to get.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successfully fetched user's public information.
        "400":
          description: Failed to fetch user's public information.
      security:
      - UserAuth: []
      - AdminAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Get public information about the user.
  /user/{user_id}/orders/claimed:
    get:
      operationId: user_user_id_orders_claimed_get
      parameters:
      - description: User ID of which we want to see the orders they are currently claiming.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Succesfully fetched user's claimed orders.
        "400":
          description: Failed to fetch user's claimed orders.
      security:
      - UserAuth: []
      - AdminAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Fetch the user's orders that they claimed.
  /user/{user_id}/orders/active:
    get:
      operationId: user_user_id_orders_active_get
      parameters:
      - description: User ID of which we want to see the orders they are currently requesting.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Succesfully fetched user's active orders.
        "400":
          description: Failed to fetch user's active delivery requests.
      security:
      - UserAuth: []
      - AdminAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Fetch the user's active orders that they are requesting.
  /user/{user_id}/update:
    patch:
      operationId: user_user_id_update_patch
      parameters:
      - description: User ID of user we are trying to update.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/body_user_update'
        content:
          application/json:
            schema:
              properties:
                name:
                  description: User's display name.
                  type: string
                password:
                  description: Password format.
                  format: password
                  type: string
                phone_number:
                  description: Phone number format.
                  pattern: ^\d{10}$
                  type: string
                etransfer_email:
                  description: Email format.
                  format: email
                  type: string
              type: object
        description: Information about the user to change. For changing the user's
          name, password, phone_number, and etransfer_email.
        required: true
      responses:
        "200":
          description: Successfully updated user information.
        "400":
          description: Failed to update user information.
        "401":
          description: Not authorized to update user's information.
      security:
      - UserAuth: []
      - AdminAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Update user information.
  /users/login:
    post:
      operationId: users_login_post
      requestBody:
        $ref: '#/components/requestBodies/body_users_login'
        content:
          application/json:
            schema:
              properties:
                email:
                  description: Email format.
                  format: email
                  type: string
                password:
                  description: Password format.
                  format: password
                  type: string
              required:
              - email
              - password
              type: object
        description: Credentials of the user to log in. Email and password required
          for logging in the user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserID'
          description: Successfully logged in.
        "400":
          description: Failed to log in user.
      summary: Log in a user. Set cookie auth token.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Logging in a user.
  /users/logout:
    get:
      operationId: users_logout_get
      responses:
        "200":
          description: Succesfully logged out user.
        "400":
          description: Failed to log out user.
      security:
      - UserAuth: []
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Logs out user.
  /users/register:
    post:
      operationId: users_register_post
      requestBody:
        $ref: '#/components/requestBodies/body_users_register'
        content:
          application/json:
            schema:
              properties:
                email:
                  description: Email format.
                  format: email
                  type: string
                password:
                  description: Password format.
                  format: password
                  type: string
                name:
                  description: User's display name.
                  type: string
                phone_number:
                  description: Phone number format.
                  pattern: ^\d{10}$
                  type: string
              required:
              - email
              - name
              - password
              - phone_number
              type: object
        description: Specify the basic and mandatory fields to create a new user (email,
          password, name, phone_number).
        required: true
      responses:
        "200":
          description: Successfully registered a new user.
        "400":
          description: Failed to register a new user.
        "403":
          description: User already exists.
      summary: Create a new user.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    summary: Registering a user.
components:
  requestBodies:
    body_users_register:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_users_register'
      required: true
    body_message:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_message'
      required: true
    body_admin_login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_admin_login'
      required: true
    body_order_complete:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_order_complete'
      required: true
    body_order_report:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_order_report'
      required: true
    body_order_claim:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_order_claim'
      required: true
    body_order_cancel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_order_cancel'
      required: true
    body_order_unclaim:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_order_unclaim'
    body_order_request:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_order_request'
      required: true
    body_user_update:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_user_update'
      required: true
    body_users_login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_users_login'
      required: true
  schemas:
    UserID:
      description: Identification of a user.
      format: uuid
      type: string
    Name:
      description: User's display name.
      type: string
    Email:
      description: Email format.
      format: email
      type: string
    PhoneNumber:
      description: Phone number format.
      pattern: ^\d{10}$
      type: string
    Password:
      description: Password format.
      format: password
      type: string
    DeliveryTokens:
      description: Delivery token count.
      format: int32
      type: integer
    User:
      description: Public-safe user definition.
      example:
        delivery_tokens: 0
        registered_time: 2000-01-23T04:56:07.000+00:00
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        etransfer_email: etransfer_email
        name: name
        phone_number: phone_number
        email: email
      properties:
        user_id:
          description: Identification of a user.
          format: uuid
          type: string
        name:
          description: User's display name.
          type: string
        email:
          description: Email format.
          format: email
          type: string
        phone_number:
          description: Phone number format.
          pattern: ^\d{10}$
          type: string
        registered_time:
          format: date-time
          type: string
        delivery_tokens:
          description: Delivery token count.
          format: int32
          type: integer
        etransfer_email:
          description: Email format.
          format: email
          type: string
      type: object
    OrderID:
      description: Identification of the order.
      format: uuid
      type: string
    PaymentMethod:
      enum:
      - cash
      - etransfer
      type: string
    Order:
      description: Content of the order.
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        deliverer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        orderer_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        delivered_time: 2000-01-23T04:56:07.000+00:00
        cancelled_time: 2000-01-20T04:56:07.000+00:00
        destination: destination
        deadline_time: 2000-01-23T04:56:07.000+00:00
        source: source
        order_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        payment_method: cash
        claimed_time: 2000-01-23T04:56:07.000+00:00
        order: order
        status: available
      properties:
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
        orderer_id:
          description: Identification of a user.
          format: uuid
          type: string
        deliverer_id:
          description: Identification of a user.
          format: uuid
          type: string
        creation_time:
          format: date-time
          type: string
        deadline_time:
          format: date-time
          type: string
        claimed_time:
          format: date-time
          type: string
        delivered_time:
          format: date-time
          type: string
        cancelled_time:
          format: date-time
          type: string
        order:
          type: string
        source:
          type: string
        destination:
          type: string
        payment_method:
          $ref: "#/components/schemas/PaymentMethod"
        status:
          enum:
          - available
          - claimed
          - delivered
          - cancelled
          - expired
          type: string
      type: object
    Message:
      description: A user message to UniBar.
      example:
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        message_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        time: 2000-01-23T04:56:07.000+00:00
        message: message
        email: email
      properties:
        message_id:
          format: uuid
          type: string
        user_id:
          description: Identification of a user.
          format: uuid
          type: string
        email:
          description: Email format.
          format: email
          type: string
        message:
          type: string
        time:
          format: date-time
          type: string
      type: object
    Report:
      description: User report.
      properties:
        report_id:
          format: uuid
          type: string
        reporter_user_id:
          description: Identification of a user.
          format: uuid
          type: string
        reported_user_id:
          description: Identification of a user.
          format: uuid
          type: string
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
        time:
          format: date-time
          type: string
        message:
          type: string
        conclusion:
          type: string
      type: object
    body_message:
      properties:
        user_id:
          description: Identification of a user.
          format: uuid
          type: string
        email:
          description: Email format.
          format: email
          type: string
        name:
          type: string
        message:
          type: string
      required:
      - message
      - name
      type: object
    body_users_register:
      properties:
        email:
          description: Email format.
          format: email
          type: string
        password:
          description: Password format.
          format: password
          type: string
        name:
          description: User's display name.
          type: string
        phone_number:
          description: Phone number format.
          pattern: ^\d{10}$
          type: string
      required:
      - email
      - name
      - password
      - phone_number
      type: object
    body_users_login:
      properties:
        email:
          description: Email format.
          format: email
          type: string
        password:
          description: Password format.
          format: password
          type: string
      required:
      - email
      - password
      type: object
    body_user_update:
      properties:
        name:
          description: User's display name.
          type: string
        password:
          description: Password format.
          format: password
          type: string
        phone_number:
          description: Phone number format.
          pattern: ^\d{10}$
          type: string
        etransfer_email:
          description: Email format.
          format: email
          type: string
      type: object
    body_order_request:
      properties:
        deadline_time:
          type: string
          format: date-time
        order:
          type: string
        source:
          type: string
        destination:
          type: string
        payment_method:
          $ref: "#/components/schemas/PaymentMethod"
      required:
      - order
      type: object
    body_order_claim:
      properties:
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
      required:
      - order_id
      type: object
    body_order_cancel:
      properties:
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
      required:
      - order_id
      type: object
    body_order_unclaim:
      properties:
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
      required:
      - order_id
      type: object
    body_order_report:
      properties:
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
        reported_id:
          description: Identification of a user.
          format: uuid
          type: string
        message:
          type: string
      required:
      - message
      - order_id
      - reported_id
      type: object
    body_order_complete:
      properties:
        order_id:
          description: Identification of the order.
          format: uuid
          type: string
      required:
      - order_id
      type: object
    body_admin_login:
      properties:
        admin_token:
          format: password
          type: string
      required:
      - admin_token
      type: object
  securitySchemes:
    UserAuth:
      in: cookie
      name: user_token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller_.info_from_UserAuth
    AdminAuth:
      in: cookie
      name: admin_token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller_.info_from_AdminAuth
