# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class BodyOrderClaim(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_id=None):  # noqa: E501
        """BodyOrderClaim - a model defined in OpenAPI

        :param order_id: The order_id of this BodyOrderClaim.  # noqa: E501
        :type order_id: str
        """
        self.openapi_types = {
            'order_id': str
        }

        self.attribute_map = {
            'order_id': 'order_id'
        }

        self._order_id = order_id

    @classmethod
    def from_dict(cls, dikt) -> 'BodyOrderClaim':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object_5 of this BodyOrderClaim.  # noqa: E501
        :rtype: BodyOrderClaim
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_id(self):
        """Gets the order_id of this BodyOrderClaim.

        Identification of the order.  # noqa: E501

        :return: The order_id of this BodyOrderClaim.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this BodyOrderClaim.

        Identification of the order.  # noqa: E501

        :param order_id: The order_id of this BodyOrderClaim.
        :type order_id: str
        """
        if order_id is None:
            raise ValueError("Invalid value for `order_id`, must not be `None`")  # noqa: E501

        self._order_id = order_id
